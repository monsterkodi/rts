###
000   000  000  000   000  0000000     0000000   000   000  
000 0 000  000  0000  000  000   000  000   000  000 0 000  
000000000  000  000 0 000  000   000  000   000  000000000  
000   000  000  000  0000  000   000  000   000  000   000  
00     00  000  000   000  0000000     0000000   00     00  
###

{ args, keyinfo, post, prefs, win } = require 'kxk'

RTS        = require './rts'
Vector     = require './lib/vector'
Quaternion = require './lib/quaternion'
electron   = require 'electron'
    
post.setMaxListeners 20

window.vec  = (x,y,z)   -> new Vector x, y, z
window.quat = (x,y,z,w) -> new Quaternion x, y, z, w

function Window extends win
    
    onMenuAction: (action, args) =>
        
        super action, args
        
w = new Window
    dir:    __dirname
    pkg:    require '../package.json'
    menu:   '../kode/menu/menu.noon'
    icon:   '../img/menu@2x.png'
    context: (items) -> 
    onLoad: -> 
        window.rts = new RTS $ '#main'
        
#  0000000   000   000   0000000  000       0000000    0000000  00000000
# 000   000  0000  000  000       000      000   000  000       000
# 000   000  000 0 000  000       000      000   000  0000000   0000000
# 000   000  000  0000  000       000      000   000       000  000
#  0000000   000   000   0000000  0000000   0000000   0000000   00000000

onMove  = -> saveBounds() 

saveBounds = -> prefs.set 'bounds', window.win.getBounds()

onClose = ->
    
#  0000000   000   000  000       0000000    0000000   0000000
# 000   000  0000  000  000      000   000  000   000  000   000
# 000   000  000 0 000  000      000   000  000000000  000   000
# 000   000  000  0000  000      000   000  000   000  000   000
#  0000000   000   000  0000000   0000000   000   000  0000000

window.onload = ->
    
    window.onresize()

# 00000000   00000000  000       0000000    0000000   0000000
# 000   000  000       000      000   000  000   000  000   000
# 0000000    0000000   000      000   000  000000000  000   000
# 000   000  000       000      000   000  000   000  000   000
# 000   000  00000000  0000000   0000000   000   000  0000000

reloadWin = ->

    prefs.save()
    clearListeners()
    electron.remote.getCurrentWindow()?.webContents.reloadIgnoringCache()

# 00000000   00000000   0000000  000  0000000  00000000  
# 000   000  000       000       000     000   000       
# 0000000    0000000   0000000   000    000    0000000   
# 000   000  000            000  000   000     000       
# 000   000  00000000  0000000   000  0000000  00000000  

window.onresize = (event) -> 
    
    saveBounds()
    main =$ "#main"
    br = main.getBoundingClientRect()
    rts?.resized br.width, br.height
    
# 000   000  00000000  000   000  
# 000  000   000        000 000   
# 0000000    0000000     00000    
# 000  000   000          000     
# 000   000  00000000     000     

window.onkeydown = (event) ->
    
    switch keyinfo.forEvent(event).key
        'w'     ➜ rts.camera.startZoomIn()
        's'     ➜ rts.camera.startZoomOut()
        'a'     ➜ rts.camera.startPivotLeft()
        'd'     ➜ rts.camera.startPivotRight()
        'q'     ➜ rts.camera.startPivotUp()
        'e'     ➜ rts.camera.startPivotDown()
        'left'  ➜ rts.camera.startMoveLeft()
        'right' ➜ rts.camera.startMoveRight()
        'up'    ➜ rts.camera.startMoveUp()
        'down'  ➜ rts.camera.startMoveDown()
        'esc'   ➜ true
        'f'     ➜ Materials.toggleFlat()
        'i'     ➜ prefs.set 'info'  not prefs.get 'info'
        '.'     ➜ prefs.set 'debug' not prefs.get 'debug'; if prefs.get 'debug' then rts.debug.show() else rts.debug.hide()
        'space' ➜ rts.togglePause()
        '='     ➜ world.incrSpeed(); world.incrSpeed()
        '-'     ➜ world.decrSpeed(); world.decrSpeed()
        '0'     ➜ world.resetSpeed()
        # else 
            # log 'keydown', keyinfo.forEvent event
    
window.onkeyup = (event) ->
    
    switch keyinfo.forEvent(event).key
        's' 'w'                     ➜ rts.camera.stopZoom()
        'a' 'd' 'q' 'e'             ➜ rts.camera.stopPivot()
        'left' 'right' 'up' 'down'  ➜ rts.camera.stopMoving()
    
post.on 'menuAction' (action) ->
    