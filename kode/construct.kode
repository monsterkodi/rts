###
 0000000   0000000   000   000   0000000  000000000  00000000   000   000   0000000  000000000
000       000   000  0000  000  000          000     000   000  000   000  000          000   
000       000   000  000 0 000  0000000      000     0000000    000   000  000          000   
000       000   000  000  0000       000     000     000   000  000   000  000          000   
 0000000   0000000   000   000  0000000      000     000   000   0000000    0000000     000   
###

{ CSG } = require '../kode/csg/csg'
        
class Construct

    @: ->
        
        @meshes = {}
        
    # 000  000   000  000  000000000  
    # 000  0000  000  000     000     
    # 000  000 0 000  000     000     
    # 000  000  0000  000     000     
    # 000  000   000  000     000     
    
    init: -> 
        
        @initTrains()
        
    # 000000000  00000000    0000000   000  000   000   0000000  
    #    000     000   000  000   000  000  0000  000  000       
    #    000     0000000    000000000  000  000 0 000  0000000   
    #    000     000   000  000   000  000  000  0000       000  
    #    000     000   000  000   000  000  000   000  0000000   
    
    initTrains: ->
        
        ●▸ trains
         
        subtract  = (a,b) -> CSG.toGeometry CSG.fromGeometry(a).subtract  CSG.fromGeometry b
        intersect = (a,b) -> CSG.toGeometry CSG.fromGeometry(a).intersect CSG.fromGeometry b
        union     = (a,b) -> CSG.toGeometry CSG.fromGeometry(a).union     CSG.fromGeometry b
     
        seg = 16
        sphere   = new THREE.SphereGeometry   1.0 seg, seg
        cylinder = new THREE.CylinderGeometry 1.0 1.0 2.0 seg
        
        rail = new THREE.BoxGeometry 3 2 1
        rail.translate 0 0 -1
        cylinder = subtract cylinder, rail
        
        sphere.translate 0 1 0
        geom = union sphere, cylinder
        sphere.translate 0 -2 0
        pill = union geom, sphere
         
        wind = new THREE.BoxGeometry 1.5 0.5 0.5
        wind.translate 0 -1.6 0.5
        
        side = new THREE.BoxGeometry 2 0.3 0.22
        side.translate 0 -1.05 0.65
        wind = union wind, side
        
        geom = subtract pill, wind

        rail = new THREE.BoxGeometry 1 8 1
        rail.translate 0 0 -1
        geom = subtract geom, rail
        
        # count = geom.attributes.position.count
        @meshes['train'] = new THREE.Mesh geom, Materials.train.body
        @meshes['train'].receiveShadow = true
        @meshes['train'].castShadow = true
        
        geom = intersect pill, wind
        @meshes['train'].add new THREE.Mesh geom, Materials.train.window
                
        ●▪ trains
        
    trains: ->
                        
        for train,index in world.trains
            mesh = @meshes['train'].clone()
            world.scene.add mesh
            train.mesh = mesh
            world.pickables.push mesh
            @updateTrain train

    updateTrain: (train) ->
        
        if train.mesh
            train.mesh.position.copy train.pos
            train.mesh.translateZ 1
                
module.exports = Construct
