###
00     00   0000000   000000000  00000000  00000000   000   0000000   000       0000000
000   000  000   000     000     000       000   000  000  000   000  000      000     
000000000  000000000     000     0000000   0000000    000  000000000  000      0000000 
000 0 000  000   000     000     000       000   000  000  000   000  000           000
000   000  000   000     000     00000000  000   000  000  000   000  0000000  0000000 
###

Materials = 
    transparent:    new THREE.MeshLambertMaterial  color:0x888888, depthWrite:false, transparent:true, opacity:0.1
    wireframe:      new THREE.MeshBasicMaterial    color:0xffffff, wireframe: true
    white:          new THREE.MeshStandardMaterial color:0xffffff    
    highlight:      new THREE.MeshLambertMaterial  color:0xffffff, emissive:0xffffff, side:THREE.BackSide, depthWrite:true, transparent:true, opacity:0.2
    floor:          new THREE.MeshStandardMaterial color:0x222222, dithering:true
    shadow:         new THREE.ShadowMaterial       opacity: 0.2
    train:
        window:     new THREE.MeshStandardMaterial color:0x000000, metalness: 0.5, roughness: 0.2 
        body:       new THREE.MeshStandardMaterial color:0xffff00, metalness: 0.2, roughness: 0.4 
        piston:     new THREE.MeshStandardMaterial color:0x000000, metalness: 0.1, roughness: 0.8 
        light:      new THREE.MeshStandardMaterial color:0x000000, metalness: 0.1, roughness: 0.8
        rail:       new THREE.MeshStandardMaterial color:0x111111, metalness: 0.8, roughness: 0.45, flatShading:true
    menu:
        active:       new THREE.MeshStandardMaterial color:Color.menu.active,       metalness: 0.9, roughness: 0.75
        inactive:     new THREE.MeshStandardMaterial color:Color.menu.inactive,     metalness: 0.9, roughness: 0.75
        activeHigh:   new THREE.MeshStandardMaterial color:Color.menu.activeHigh,   metalness: 0.9, roughness: 0.75
        inactiveHigh: new THREE.MeshStandardMaterial color:Color.menu.inactiveHigh, metalness: 0.9, roughness: 0.75
    
    setWire: (wire) ->
        
        prefs.set 'wire' wire
        for k,m of Materials.train
            m.wireframe = wire

    getWire: -> prefs.get 'wire'
    toggleWire: -> Materials.setWire not Materials.getWire()

    setFlat: (flat) ->
        
        prefs.set 'flat' flat
        for k,m of Materials.train
            continue if k == 'rail'
            m.flatShading = flat
            m.needsUpdate = true
            
    getFlat: -> prefs.get 'flat'
    toggleFlat: -> Materials.setFlat not Materials.getFlat()

    setDither: (dither) ->
        
        Materials.floor.dithering = dither
        Materials.floor.needsUpdate = true
            
    toggleDither: ->
        
        Materials.setDither not Materials.dither
        
module.exports = Materials
