###
  000  000   000  00000000   0000000   
  000  0000  000  000       000   000  
  000  000 0 000  000000    000   000  
  000  000  0000  000       000   000  
  000  000   000  000        0000000   
###

class Info

    @: ->
                    
        @info    = elem class:'info' style:'bottom:10px; right:20px;'
        @train   = elem class:'info' style:'top:40px; left:20px;'
        @track   = elem class:'info' style:'top:40px; left:350px;'
        @paths   = elem class:'info' style:'bottom:10px; left:700px;'
        @station = elem class:'info' style:'top:40px; left:700px;'
        @node    = elem class:'info' style:'bottom:10px; left:350px;'
        
        document.body.appendChild @info
        document.body.appendChild @train
        document.body.appendChild @track
        document.body.appendChild @paths
        document.body.appendChild @station
        document.body.appendChild @node
          
    del: -> 
        @info.remove()
        @train.remove()
        @track.remove()
        @paths.remove()
        @station.remove()
        @node.remove()
        
    # 0000000    00000000    0000000   000   000
    # 000   000  000   000  000   000  000 0 000
    # 000   000  0000000    000000000  000000000
    # 000   000  000   000  000   000  000   000
    # 0000000    000   000  000   000  00     00
                
    draw: (info) =>
        
        @info.innerHTML  = ''
        @train.innerHTML = ''
        @track.innerHTML = ''
        @paths.innerHTML = ''
        @station.innerHTML = ''
        @node.innerHTML = ''

        add = (text) => elem class:'infoText' parent:@info, text:text
        
        for k,v of info
            add "#{k} #{v}"
            
        corpses = world.allTrains().length - world.traffic.trains.length
        add "bodies  #{world.physics.cannon.bodies.length}"
        add "corpses #{corpses}"
        add "trains  #{world.traffic.trains.length}"
        add "tracks  #{world.allTracks().length}"
        add "nodes   #{world.allNodes().length}"

        add = (text) => elem class:'infoText' parent:@station, text:text
        
        for station in world.allStations()
            add "#{rpad 5 station.name} #{station.waitingCar?.name ? ''} #{station.arm?.waitingForCar ? 'waiting' : ''}"
        
        add = (text) => elem class:'infoText' parent:@train, text:text
        
        for train in world.traffic.trains
            add "#{train.name} #{train.colorName} #{train.blockReason ? ''}" 
            add "   #{train.track.name} ▴ #{train.path.delta.toFixed 1} td #{train.tailDelta().toFixed 1}"
            # add "   hnd #{train.path.nextDistance().toFixed 1} hpd #{train.headPrevDistance().toFixed 1} tpd #{train.tailPrevDistance().toFixed 1}"
            # add "   htr #{train.headTrack().name} ttr #{train.tailTrack().name}"
            # add "   tpn #{train.tailPrevNode()?.name} tpt #{train.tailPrevTrack()?.name ? '?'} "
            for car in train.boxcars()
                if car.waitingForUnload or car.waitingForLoad
                    add "   #{car.name} #{car.waitingForUnload ? 'unload' : ''} #{car.waitingForCargo ? 'cargo' : ''}" 
        add " "    
        
        add = (text) => elem class:'infoText' parent:@paths, text:text
        
        for train in world.traffic.trains
            add "#{train.path.toString()}"
            
        add = (text) => elem class:'infoText' parent:@track, text:text
        
        for track in world.allTracks()
            s = "#{rpad 4 track.name} #{track.mode} #{rpad 4 track.node[0].name} ▸ #{rpad 4 track.node[1].name} ▪ #{rpad 5 track.exitBlockNode?.name ? ''}" 
            for train in track.trains
                s += ' ' + rpad 3 train.name
            add s

        add = (text) => elem class:'infoText' parent:@node, text:text
        
        for node in world.allNodes()
            s = rpad 5 node.name
            s += node.commonMode() + ' '
            s += '●'
            for track in node.outTracks
                s += ' ' + rpad 3 track.name
            s += ' ▴'
            for track in node.inTracks
                s += ' ' + rpad 3 track.name
                
            s += ' ▪ '
            s += (node.train?.name ? '')
            s += ' ▪ '
            for train in node.blockedTrains
                s += ' ' + rpad 3 train.name
                
            add s
            
module.exports = Info

