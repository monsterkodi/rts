###
 0000000   00000000   000  0000000    000   000  00000000  000      00000000   00000000  00000000 
000        000   000  000  000   000  000   000  000       000      000   000  000       000   000
000  0000  0000000    000  000   000  000000000  0000000   000      00000000   0000000   0000000  
000   000  000   000  000  000   000  000   000  000       000      000        000       000   000
 0000000   000   000  000  0000000    000   000  00000000  0000000  000        00000000  000   000
###

class GridHelper extends LineSegments

    @: (size=600) ->

        c1 = new Color 0x000000
        c2 = new Color 0x303030
        c3 = new Color 0x383838
        c4 = new Color 0x404040

        halfSize = size / 2

        vertices = []
        colors   = []

        j = 0
        for i in -halfSize...halfSize

            vertices.push -halfSize, i, 0, halfSize, i, 0
            vertices.push i, -halfSize, 0, i, halfSize, 0

            color = i == 0 ? c1 : (i % 12 == 0) ? c2 : (i % 6 == 0) ? c3 : c4 

            for c in 0...4
                color.toArray colors, j 
                j += 3

        geom = new BufferGeometry()
        geom.setAttribute 'position' new THREE.Float32BufferAttribute vertices, 3 
        geom.setAttribute 'color'    new THREE.Float32BufferAttribute colors, 3 

        material = new THREE.LineBasicMaterial vertexColors:true polygonOffset:true polygonOffsetFactor:-1.0 #toneMapped:false
        # material.linewidth = 2 
        super geom, material

    dispose: ->

        @geometry.dispose()
        @material.dispose()

module.exports = GridHelper
